contract MemeVote =

  record meme =
    { creatorAddress 		 : address,
      url            		 : string,
      name           		 : string,
      voteCountPositive      : int,
      voteCountNegative		 : int }

  record state =
    { memes      : map(int, meme),
      memesLength : int }

  function init() =
    { memes = {},
      memesLength = 0 }

  public function getMeme(index : int) : meme =
  	switch(Map.lookup(index, state.memes))
	    None    => abort("There was no meme with this index registered.")
	    Some(x) => x

  public stateful function registerMeme(url' : string, name' : string) =
    let meme = { creatorAddress = Call.caller, url = url', name = name', voteCountPositive = 0, voteCountNegative = 0}
    let index = getMemesLength() + 1
    put(state{ memes[index] = meme, memesLength = index })

  public function getMemesLength() : int =
    state.memesLength

  public stateful function voteMemePositive(index : int) =
    let meme = getMeme(index)
    Chain.spend(meme.creatorAddress, Call.value)
    let updatedVoteCountPositive = meme.voteCountPositive + Call.value
    let updatedMemes = state.memes{ [index].voteCountPositive = updatedVoteCountPositive }
    put(state{ memes = updatedMemes })
    
  public stateful function voteMemeNegative(index : int) =
    let meme = getMeme(index)
    Chain.spend(meme.creatorAddress, Call.value)
    let updatedVoteCountNegative = meme.voteCountNegative + Call.value
    let updatedMemes = state.memes{ [index].voteCountNegative = updatedVoteCountNegative }
    put(state{ memes = updatedMemes })
